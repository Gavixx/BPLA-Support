//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ArmyForm.h"
#include <DateUtils.hpp>  // Для DayOf() і MonthOf()
#include "AddOrderForm.h"
#include "LoginForm.h"
#include "DataModule.h"
//#include <windows.h>

//---------------------------------------------------------------------------

#pragma package(smart_init)
#pragma resource "*.dfm"
TForm3 *Form3;
//---------------------------------------------------------------------------

const String monthNames[12] = {"Січня", "Лютого", "Березня", "Квітня", "Травня", "Червня",
							   "Липня", "Серпня", "Вересня", "Жовтня", "Листопада", "Грудня"};





__fastcall TForm3::TForm3(TComponent* Owner)
	: TForm(Owner)
{
	DataModule1->FDQuery1->Connection = DataModule1->FDConnection1;
	GetItemToFillBox();
	LoadDB();
	SetDBGridColumnsStyles();
	DateTimePickerEnd->Date = Now();

}


//     		     Візуал для оформлення таблиці
//---------------------------------------------------------------------------
void __fastcall TForm3::SetDBGridColumnsStyles()
{
	int gridWidth = DBGrid1->ClientWidth; // Ширина всієї таблички
//	ShowMessage(gridWidth);
	// Пропорційні коефіцієнти для колонок (ви можете змінювати ці значення, щоб налаштувати пропорції)
	float coefColumn1 = 0.2;  // 20% для першої колонки
	float coefColumn2 = 0.2;  // 20% для другої колонки
	float coefColumn3 = 0.1;  // 10% для третьої колонки
	float coefColumn4 = 0.2;  // 20% для четвертої колонки
	float coefColumn5 = 0.2;  // 20% для п'ятої колонки
	float coefColumn6 = 0.1;  // 10% для шостої колонки



	// Встановлюємо ширину кожної колонки відносно ширини таблиці
	 DBGrid1->Columns->Items[0]->Width = 386;
	 DBGrid1->Columns->Items[0]->Title->Caption = "Назва дрону";
	 DBGrid1->Columns->Items[0]->Title->Alignment = taCenter;

	 DBGrid1->Columns->Items[1]->Width = 275;
	 DBGrid1->Columns->Items[1]->Title->Caption = "Тип дрону";
	 DBGrid1->Columns->Items[1]->Title->Alignment = taCenter;
	 DBGrid1->Columns->Items[1]->Alignment = taCenter;

	 DBGrid1->Columns->Items[2]->Width = 231;
	 DBGrid1->Columns->Items[2]->Title->Caption = "Потрібна к-ть";
	 DBGrid1->Columns->Items[2]->Title->Alignment = taCenter;
	 DBGrid1->Columns->Items[2]->Alignment = taCenter;

	 DBGrid1->Columns->Items[3]->Width = 231;
	 DBGrid1->Columns->Items[3]->Title->Caption = "Дата подачі запиту";
	 DBGrid1->Columns->Items[3]->Title->Alignment = taCenter;
	 DBGrid1->Columns->Items[3]->Alignment = taCenter;

	 DBGrid1->Columns->Items[4]->Width = 231;
	 DBGrid1->Columns->Items[4]->Title->Caption = "Статус";
	 DBGrid1->Columns->Items[4]->Title->Alignment = taCenter;
	 DBGrid1->Columns->Items[4]->Alignment = taCenter;

	 DBGrid1->Columns->Items[5]->Width = 154;
	 DBGrid1->Columns->Items[5]->Title->Caption = "Отримано дронів";
	 DBGrid1->Columns->Items[5]->Title->Alignment = taCenter;
	 DBGrid1->Columns->Items[5]->Alignment = taCenter;

	// Обробник для відображення дати
	DataModule1->FDQuery1->FieldByName("request_date")->OnGetText = DateFieldGetText;

}


//       	    Для відобреження в форматі "1 ВЕРЕСНЯ"
void __fastcall TForm3::DateFieldGetText(TField *Sender, UnicodeString &Text, bool DisplayText)
{
	TDateTime requestDate = Sender->AsDateTime;  // Отримуємо дату з поля

	int day = DayOf(requestDate);   // Отримуємо день з дати
	int month = MonthOf(requestDate);  // Отримуємо місяць з дати

	// Формуємо відформатовану дату
	Text = IntToStr(day) + " " + monthNames[month - 1];
}



  // 			клік на поля таблиці
void __fastcall TForm3::DBGrid1TitleClick(TColumn *Column)
{
	// Ім'я поля, за яким відбудеться сортування
	static String lastSortedColumn = "";  // Остання відсортована колонка
	static bool sortAscending = true;     // Прапор для напрямку сортування

	String columnName = Column->FieldName;

	// Перевірка, чи є активний DataSet, і чи підтримує він SQL
	if (DataModule1->DataSource1->DataSet && dynamic_cast<TFDQuery*>(DataModule1->DataSource1->DataSet))
	{
		TFDQuery *query = dynamic_cast<TFDQuery*>(DataModule1->DataSource1->DataSet);

		// Отримуємо поточний SQL запит
		String baseSQL = query->SQL->Text;

		// Спробуємо знайти вже існуюче "ORDER BY"
		int orderByPos = baseSQL.Pos("ORDER BY");
		// Якщо "ORDER BY" вже існує, видаляємо його
		if (orderByPos > 0)
		{
			baseSQL = baseSQL.SubString(1, orderByPos - 1);
		}

		// Якщо клікаємо по тій самій колонці, змінюємо напрямок сортування
		if (columnName == lastSortedColumn)
		{
			sortAscending = !sortAscending;  // Міняємо прапор
		}
		else
		{
			// Якщо інша колонка, завжди починаємо з сортування за зростанням
			sortAscending = true;
		}

		// Зберігаємо поточну колонку як останню відсортовану
		lastSortedColumn = columnName;

		// Формуємо запит із новим сортуванням
		String sortDirection = sortAscending ? "ASC" : "DESC";
		baseSQL += " ORDER BY " + columnName + " " + sortDirection;

		// Оновлюємо запит і перезавантажуємо дані
		query->SQL->Text = baseSQL;
		query->Close();
		query->Open();

		// Прив'язуємо подію для форматування дати
		DataModule1->FDQuery1->FieldByName("request_date")->OnGetText = DateFieldGetText;

		// Встановлюємо DataSet для DataSource
		DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;
		SetDBGridColumnsStyles();
	}
}
//---------------------------------------------------------------------------

//              Відкриття форми на додавання запиту
void __fastcall TForm3::ButtonAddOrderClick(TObject *Sender)
{
	TForm5 *AddOrderForm = new TForm5(this);
	AddOrderForm->Show();
	this->Hide();

}
//---------------------------------------------------------------------------


//              Кнопка для оновлення таблиці(показу бд)
void __fastcall TForm3::ButtonShowStatClick(TObject *Sender)
{
	LoadDB();
}
//---------------------------------------------------------------------------

//       	   Функція для підкрузки бд
void __fastcall TForm3::LoadDB() {
    // Підключення до бази даних через DataModule1
    DataModule1->ConnectToDatabase();

    // Налаштування запиту через DataModule1
    DataModule1->FDQuery1->Connection = DataModule1->FDConnection1;
    DataModule1->FDQuery1->SQL->Text = "SELECT DM.drone_name, DM.drone_type, MR.quantity, MR.request_date, MR.status, MR.fulfilled_quantity "
                                       "FROM MilitaryRequests MR "
                                       "JOIN DroneModel DM ON MR.drone_id = DM.drone_id";
    DataModule1->FDQuery1->Open();  // Виконує запит та відкриває результати

    // Прив'язка даних до DataSource через DataModule1
    DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;

    // Прив'язка DataSource до DBGrid через DataModule1
    DBGrid1->DataSource = DataModule1->DataSource1;

    // Налаштування стилю колонок DBGrid
    SetDBGridColumnsStyles();
}


//---------------------------------------------------------------------------

// 				заповнення box з бд

void __fastcall TForm3::GetItemToFillBox() {
	// Drone type
	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT drone_type FROM DroneModel";
	DataModule1->FDQuery1->Open();
	ComboBoxDroneType->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxDroneType->Items->Add(DataModule1->FDQuery1->FieldByName("drone_type")->AsString);
		DataModule1->FDQuery1->Next();
	}

	// Drone name
	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT drone_name FROM DroneModel";
	DataModule1->FDQuery1->Open();
	ComboBoxDroneName->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxDroneName->Items->Add(DataModule1->FDQuery1->FieldByName("drone_name")->AsString);
		DataModule1->FDQuery1->Next();
	}

	// Drone status
	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT status FROM MilitaryRequests";
	DataModule1->FDQuery1->Open();
	ComboBoxStatus->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxStatus->Items->Add(DataModule1->FDQuery1->FieldByName("status")->AsString);
		DataModule1->FDQuery1->Next();
	}
}


//---------------------------------------------------------------------------



void __fastcall TForm3::ButtonFilterClick(TObject *Sender)
{
	TDateTime startDate = DateTimePickerStart->Date;
	TDateTime endDate = DateTimePickerEnd->Date;

	String baseSQL =
		"SELECT DM.drone_name, DM.drone_type, MR.quantity, MR.request_date, MR.status, MR.fulfilled_quantity "
		"FROM MilitaryRequests MR "
		"JOIN DroneModel DM ON MR.drone_id = DM.drone_id "
		"WHERE MR.request_date BETWEEN :startDate AND :endDate";

	// Додаємо фільтрацію по імені дрону, якщо вибрано елемент
	if (ComboBoxDroneName->Text != "")
	{
		baseSQL += " AND DM.drone_name LIKE :dronename";  // Фільтрація по імені дрону
	}

	// Додаємо фільтрацію по типу дрону, якщо вибрано елемент
	if (ComboBoxDroneType->Text != "")
	{
		baseSQL += " AND DM.drone_type LIKE :dronetype";  // Фільтрація по типу дрону
	}

	// Додаємо фільтрацію по статусу, якщо вибрано елемент
	if (ComboBoxStatus->Text != "")
	{
		baseSQL += " AND MR.status LIKE :status";  // Фільтрація по статусу
	}

	// Присвоюємо збудований запит до FDQuery1 через DataModule1
	DataModule1->FDQuery1->SQL->Text = baseSQL;

	// Прив'язуємо параметри до відповідних значень
	DataModule1->FDQuery1->ParamByName("startDate")->AsDate = startDate;
	DataModule1->FDQuery1->ParamByName("endDate")->AsDate = endDate;

	// Якщо вибрано ім'я дрону, передаємо його як параметр
	if (ComboBoxDroneName->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("dronename")->AsString = ComboBoxDroneName->Text + "%";
	}

	// Якщо вибрано тип дрону, передаємо його як параметр
	if (ComboBoxDroneType->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("dronetype")->AsString = ComboBoxDroneType->Text + "%";
	}

	// Якщо вибрано статус, передаємо його як параметр
	if (ComboBoxStatus->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("status")->AsString = ComboBoxStatus->Text + "%";
	}

	try {
		// Виконати запит
		DataModule1->FDQuery1->Open();
		// Прив'язка результатів до DataSource і DBGrid через DataModule1
		DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;
		DBGrid1->DataSource = DataModule1->DataSource1;
		SetDBGridColumnsStyles();  // Встановлення стилів колонок
		ShowMessage("Filtered successfully");
	} catch (Exception &e) {
		ShowMessage("Помилка при фільтрації: " + e.Message);
	}
}

//---------------------------------------------------------------------------

void __fastcall TForm3::ButtonClearFilterClick(TObject *Sender)
{
   // Скидання вибору у всіх ComboBox
   ComboBoxDroneType->ItemIndex = -1;
   ComboBoxDroneName->ItemIndex = -1;
   ComboBoxStatus->ItemIndex = -1;

   // Скидання дат
   DateTimePickerStart->Date = EncodeDate(2024, 1, 1);  // Скидаємо на 1 січня 2024 року
   DateTimePickerEnd->Date = Now();                     // Встановлюємо кінцеву дату на сьогодні

   // Перезавантаження бази даних
   LoadDB();
}
