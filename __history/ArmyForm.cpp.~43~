//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ArmyForm.h"
#include "AddOrderForm.h"
#include "LoginForm.h"
#include "DataModule.h"
#include <DateUtils.hpp>  // Для DayOf() і MonthOf()

//---------------------------------------------------------------------------

#pragma package(smart_init)
#pragma resource "*.dfm"
TForm3 *Form3;
//---------------------------------------------------------------------------

const String monthNames[12] = {"Січня", "Лютого", "Березня", "Квітня", "Травня", "Червня",
							   "Липня", "Серпня", "Вересня", "Жовтня", "Листопада", "Грудня"};

//---------------------------------------------------------------------------

__fastcall TForm3::TForm3(TComponent* Owner)
	: TForm(Owner)
{
	DataModule1->FDQuery1->Connection = DataModule1->FDConnection1;
	GetItemToFillBox();
	LoadDB();
	SetDBGridColumnsStyles();
	DateTimePickerEnd->Date = Now();
}

// Візуал для оформлення таблиці
//---------------------------------------------------------------------------
void __fastcall TForm3::SetDBGridColumnsStyles()
{
    int gridWidth = DBGrid1->ClientWidth; // Загальна ширина таблиці
    int visibleColumnCount = 0;

    // Рахуємо кількість видимих колонок
    for (int i = 0; i < DBGrid1->Columns->Count; i++) {
        if (DBGrid1->Columns->Items[i]->Visible) {
            visibleColumnCount++;
        }
    }

    // Загальна ширина на колонку
    int columnWidth = gridWidth / visibleColumnCount;
    int remainingWidth = gridWidth - (columnWidth * visibleColumnCount);

    for (int i = 0; i < DBGrid1->Columns->Count; i++) {
        if (DBGrid1->Columns->Items[i]->Visible) {
            DBGrid1->Columns->Items[i]->Width = columnWidth;

            // Додаємо залишкову ширину до останньої колонки, щоб заповнити простір
            if (i == DBGrid1->Columns->Count - 1) {
                DBGrid1->Columns->Items[i]->Width += remainingWidth;
            }
        }
    }

    // Налаштування заголовків і вирівнювання для кожної колонки
    DBGrid1->Columns->Items[0]->Title->Caption = "Назва дрону";
    DBGrid1->Columns->Items[0]->Title->Alignment = taCenter;

    DBGrid1->Columns->Items[1]->Title->Caption = "Тип дрону";
    DBGrid1->Columns->Items[1]->Title->Alignment = taCenter;
    DBGrid1->Columns->Items[1]->Alignment = taCenter;

    DBGrid1->Columns->Items[2]->Title->Caption = "Потрібна к-ть";
    DBGrid1->Columns->Items[2]->Title->Alignment = taCenter;
    DBGrid1->Columns->Items[2]->Alignment = taCenter;

    DBGrid1->Columns->Items[3]->Title->Caption = "Дата подачі запиту";
    DBGrid1->Columns->Items[3]->Title->Alignment = taCenter;
    DBGrid1->Columns->Items[3]->Alignment = taCenter;

    DBGrid1->Columns->Items[4]->Title->Caption = "Статус";
    DBGrid1->Columns->Items[4]->Title->Alignment = taCenter;
    DBGrid1->Columns->Items[4]->Alignment = taCenter;

    DBGrid1->Columns->Items[5]->Title->Caption = "Отримано дронів";
    DBGrid1->Columns->Items[5]->Title->Alignment = taCenter;
    DBGrid1->Columns->Items[5]->Alignment = taCenter;
}



// Для відобреження в форматі "1 ВЕРЕСНЯ"
//---------------------------------------------------------------------------

void __fastcall TForm3::DateFieldGetText(TField *Sender, UnicodeString &Text, bool DisplayText)
{
	TDateTime requestDate = Sender->AsDateTime;  // Отримуємо дату з поля

	int day = DayOf(requestDate);   // Отримуємо день з дати
	int month = MonthOf(requestDate);  // Отримуємо місяць з дати

	// Формуємо відформатовану дату
	Text = IntToStr(day) + " " + monthNames[month - 1];
}

// Клік на поля таблиці
//---------------------------------------------------------------------------

void __fastcall TForm3::DBGrid1TitleClick(TColumn *Column)
{
	static String lastSortedColumn = "";  // Остання відсортована колонка
	static bool sortAscending = true;     // Прапор для напрямку сортування

	String columnName = Column->FieldName;

	// Перевірка, чи є активний DataSet, і чи підтримує він SQL
	if (DataModule1->DataSource1->DataSet && dynamic_cast<TFDQuery*>(DataModule1->DataSource1->DataSet))
	{
		TFDQuery *query = dynamic_cast<TFDQuery*>(DataModule1->DataSource1->DataSet);

		// Отримуємо поточний SQL запит
		String baseSQL = query->SQL->Text;

		// Спробуємо знайти вже існуюче "ORDER BY"
		int orderByPos = baseSQL.Pos("ORDER BY");
		if (orderByPos > 0)
		{
			baseSQL = baseSQL.SubString(1, orderByPos - 1);
		}

		// Змінюємо напрямок сортування
		if (columnName == lastSortedColumn)
		{
			sortAscending = !sortAscending;  // Міняємо прапор
		}
		else
		{
			sortAscending = true;
		}

		lastSortedColumn = columnName;
		String sortDirection = sortAscending ? "ASC" : "DESC";
		baseSQL += " ORDER BY " + columnName + " " + sortDirection;

		// Оновлюємо запит і перезавантажуємо дані
		query->SQL->Text = baseSQL;
		query->Close();
		query->Open();

		DataModule1->FDQuery1->FieldByName("request_date")->OnGetText = DateFieldGetText;

		DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;
		SetDBGridColumnsStyles();
	}
}

// Відкриття форми на додавання запиту
//---------------------------------------------------------------------------

void __fastcall TForm3::ButtonAddOrderClick(TObject *Sender)
{
	TForm5 *AddOrderForm = new TForm5(this);
	AddOrderForm->Show();
	this->Hide();
}

// Кнопка для оновлення таблиці
//---------------------------------------------------------------------------

void __fastcall TForm3::ButtonShowStatClick(TObject *Sender)
{
	LoadDB();
}

// Функція для підкрузки БД
//---------------------------------------------------------------------------

void __fastcall TForm3::LoadDB()
{

    // Переконайтесь, що з'єднання до бази даних активно
    if (!DataModule1->FDConnection1->Connected) {
        DataModule1->ConnectToDatabase();
    }

    // Закриваємо попередній запит перед відкриттям нового
    DataModule1->FDQuery1->Close();

    // Налаштовуємо запит через DataModule1
    DataModule1->FDQuery1->SQL->Text = "SELECT DM.drone_name, DM.drone_type, MR.quantity, MR.request_date, MR.status, MR.fulfilled_quantity "
                                       "FROM MilitaryRequests MR "
                                       "JOIN DroneModel DM ON MR.drone_id = DM.drone_id";
    DataModule1->FDQuery1->Open();  // Виконує запит та відкриває результати

    if (DataModule1->FDQuery1->RecordCount > 0) {
        // Прив'язка даних до DataSource через DataModule1
        DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;

        // Прив'язка DataSource до DBGrid через DataModule1
        DBGrid1->DataSource = DataModule1->DataSource1;

        // Налаштування стилю колонок DBGrid
		SetDBGridColumnsStyles();
    } else {
        ShowMessage("Немає даних для відображення.");
    }
}

// Заповнення ComboBox з БД
//---------------------------------------------------------------------------

void __fastcall TForm3::GetItemToFillBox()
{
	DataModule1->FDQuery1->Close();

	// Заповнення ComboBox для типу дрону
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT drone_type FROM DroneModel";
	DataModule1->FDQuery1->Open();
	ComboBoxDroneType->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxDroneType->Items->Add(DataModule1->FDQuery1->FieldByName("drone_type")->AsString);
		DataModule1->FDQuery1->Next();
	}

	// Заповнення ComboBox для назви дрону
	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT drone_name FROM DroneModel";
	DataModule1->FDQuery1->Open();
	ComboBoxDroneName->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxDroneName->Items->Add(DataModule1->FDQuery1->FieldByName("drone_name")->AsString);
		DataModule1->FDQuery1->Next();
	}

	// Заповнення ComboBox для статусу запиту
	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = "SELECT DISTINCT status FROM MilitaryRequests";
	DataModule1->FDQuery1->Open();
	ComboBoxStatus->Items->Clear();
	while (!DataModule1->FDQuery1->Eof) {
		ComboBoxStatus->Items->Add(DataModule1->FDQuery1->FieldByName("status")->AsString);
		DataModule1->FDQuery1->Next();
	}
}

// Фільтрація за параметрами
//---------------------------------------------------------------------------

void __fastcall TForm3::ButtonFilterClick(TObject *Sender)
{
	TDateTime startDate = DateTimePickerStart->Date;
	TDateTime endDate = DateTimePickerEnd->Date;

	String baseSQL =
		"SELECT DM.drone_name, DM.drone_type, MR.quantity, MR.request_date, MR.status, MR.fulfilled_quantity "
		"FROM MilitaryRequests MR "
		"JOIN DroneModel DM ON MR.drone_id = DM.drone_id "
		"WHERE MR.request_date BETWEEN :startDate AND :endDate";

	if (ComboBoxDroneName->Text != "")
	{
		baseSQL += " AND DM.drone_name LIKE :dronename";
	}

	if (ComboBoxDroneType->Text != "")
	{
		baseSQL += " AND DM.drone_type LIKE :dronetype";
	}

	if (ComboBoxStatus->Text != "")
	{
		baseSQL += " AND MR.status LIKE :status";
	}

	DataModule1->FDQuery1->Close();
	DataModule1->FDQuery1->SQL->Text = baseSQL;
	DataModule1->FDQuery1->ParamByName("startDate")->AsDate = startDate;
	DataModule1->FDQuery1->ParamByName("endDate")->AsDate = endDate;

	if (ComboBoxDroneName->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("dronename")->AsString = ComboBoxDroneName->Text + "%";
	}

	if (ComboBoxDroneType->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("dronetype")->AsString = ComboBoxDroneType->Text + "%";
	}

	if (ComboBoxStatus->Text != "")
	{
		DataModule1->FDQuery1->ParamByName("status")->AsString = ComboBoxStatus->Text + "%";
	}

	try {
		DataModule1->FDQuery1->Open();

		if (DataModule1->FDQuery1->RecordCount == 0) {
			ShowMessage("Фільтр не дав результатів.");
		} else {
			DataModule1->DataSource1->DataSet = DataModule1->FDQuery1;
			DBGrid1->DataSource = DataModule1->DataSource1;
			SetDBGridColumnsStyles();
			ShowMessage("Filtered successfully");
		}
	} catch (Exception &e) {
		ShowMessage("Помилка при фільтрації: " + e.Message);
	}
}

// Очищення фільтрів
//---------------------------------------------------------------------------

void __fastcall TForm3::ButtonClearFilterClick(TObject *Sender)
{
   ComboBoxDroneType->ItemIndex = -1;
   ComboBoxDroneName->ItemIndex = -1;
   ComboBoxStatus->ItemIndex = -1;

   DateTimePickerStart->Date = EncodeDate(2024, 1, 1);  // Скидаємо на 1 січня 2024 року
   DateTimePickerEnd->Date = Now();                     // Встановлюємо кінцеву дату на сьогодні

   LoadDB();
}

void __fastcall TForm3::FormClose(TObject *Sender, TCloseAction &Action)
{
    if(DataModule1->GetChangeUserState() == false){
	Action = caFree;   // Звільняє пам'ять після закриття
	Application->Terminate();  // Завершує застосунок
	}
}
//---------------------------------------------------------------------------

